{"ast":null,"code":"var _jsxFileName = \"/home/karim/E/workplace/e-commerce/client/src/components/withSpinner/with-spinner.jsx\";\nimport React from \"react\";\nimport \"./with-spinner.scss\";\n\nconst WithSpinner = WrappedComponent => ({\n  loading,\n  ...props\n}) => {\n  console.log(\"loadingloading\", loading);\n  return loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/client/src/components/withSpinner/with-spinner.jsx"],"names":["React","WithSpinner","WrappedComponent","loading","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,qBAAP;;AACA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB,CAAC;AAAEC,EAAAA,OAAF;AAAW,KAAGC;AAAd,CAAD,KAA2B;AACnEC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,OAA9B;AACA,SAAOA,OAAO,gBACZ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,gBAKZ,oBAAC,gBAAD,oBAAsBC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF;AAOD,CATD;;AAWA,eAAeH,WAAf","sourcesContent":["import React from \"react\";\n\nimport \"./with-spinner.scss\";\nconst WithSpinner = (WrappedComponent) => ({ loading, ...props }) => {\n  console.log(\"loadingloading\", loading);\n  return loading ? (\n    <div className=\"spinner-overlay\">\n      <div className=\"spinner-container\"></div>\n    </div>\n  ) : (\n    <WrappedComponent {...props} />\n  );\n};\n\nexport default WithSpinner;\n"]},"metadata":{},"sourceType":"module"}