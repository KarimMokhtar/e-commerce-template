{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDWK_YrmZTs2kIDvvTxAQ4LoaLsEUqmY5w\",\n  authDomain: \"kings-queens-9f743.firebaseapp.com\",\n  databaseURL: \"https://kings-queens-9f743.firebaseio.com\",\n  projectId: \"kings-queens-9f743\",\n  storageBucket: \"kings-queens-9f743.appspot.com\",\n  messagingSenderId: \"1091343569027\",\n  appId: \"1:1091343569027:web:81070d5d763df77a2c4bb6\",\n  measurementId: \"G-WL5QVVXTHT\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  console.log(\"test1\", userAuth, additionalData);\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(\"test2\", userRef, snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(\"collectionRef\", collectionRef);\n  const batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollections = collections.docs.map(obj => {\n    const {\n      title,\n      items\n    } = obj.data();\n    return {\n      title,\n      items,\n      routeName: encodeURI(title.toLowerCase()),\n      id: obj.id\n    };\n  });\n  return transformedCollections.reduce((acc, ele) => {\n    acc[ele.title.toLowerCase()] = ele;\n    return acc;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","console","log","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","message","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollections","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","acc","ele","initializeApp","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyDWK_YrmZTs2kIDvvTxAQ4LoaLsEUqmY5w\",\n  authDomain: \"kings-queens-9f743.firebaseapp.com\",\n  databaseURL: \"https://kings-queens-9f743.firebaseio.com\",\n  projectId: \"kings-queens-9f743\",\n  storageBucket: \"kings-queens-9f743.appspot.com\",\n  messagingSenderId: \"1091343569027\",\n  appId: \"1:1091343569027:web:81070d5d763df77a2c4bb6\",\n  measurementId: \"G-WL5QVVXTHT\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  console.log(\"test1\", userAuth, additionalData);\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(\"test2\", userRef, snapShot);\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(\"collectionRef\", collectionRef);\n\n  const batch = firestore.batch();\n  objectToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollections = collections.docs.map((obj) => {\n    const { title, items } = obj.data();\n    return {\n      title,\n      items,\n      routeName: encodeURI(title.toLowerCase()),\n      id: obj.id,\n    };\n  });\n  return transformedCollections.reduce((acc, ele) => {\n    acc[ele.title.toLowerCase()] = ele;\n    return acc;\n  }, {});\n};\n\nfirebase.initializeApp(config);\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}