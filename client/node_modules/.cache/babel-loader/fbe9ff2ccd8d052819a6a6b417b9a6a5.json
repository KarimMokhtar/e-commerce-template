{"ast":null,"code":"var _jsxFileName = \"/home/karim/E/workplace/e-commerce/src/components/sign-in/sign-in.jsx\";\nimport React, { useuserCredentials } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-in.scss\";\nimport FormInput from \"../form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/actions\";\n\nconst SignIn = props => {\n  const [userCredentials, setUserCredentials] = useuserCredentials({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserCredentials({\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      emailSignInStart\n    } = props;\n    const {\n      email,\n      password\n    } = userCredentials;\n    emailSignInStart(email, password);\n  };\n\n  const {\n    googleSignInStart\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"I already have account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Sing in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: userCredentials.email,\n    required: true,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: userCredentials.password,\n    handleChange: handleChange,\n    required: true,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    isGoogleSignIn: true,\n    onClick: googleSignInStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/src/components/sign-in/sign-in.jsx"],"names":["React","useuserCredentials","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","props","userCredentials","setUserCredentials","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useuserCredentials } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-in.scss\";\nimport FormInput from \"../form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/actions\";\nconst SignIn = (props) => {\n  const [userCredentials, setUserCredentials] = useuserCredentials({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setUserCredentials({ [name]: value });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { emailSignInStart } = props;\n    const { email, password } = userCredentials;\n    emailSignInStart(email, password);\n  };\n  const { googleSignInStart } = props;\n  return (\n    <div className=\"sign-in\">\n      <h1>I already have account</h1>\n      <span>Sing in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          handleChange={handleChange}\n          value={userCredentials.email}\n          required\n          label=\"Email\"\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={userCredentials.password}\n          handleChange={handleChange}\n          required\n          label=\"Password\"\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">Sign in</CustomButton>\n          <CustomButton\n            type=\"button\"\n            isGoogleSignIn\n            onClick={googleSignInStart}\n          >\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}