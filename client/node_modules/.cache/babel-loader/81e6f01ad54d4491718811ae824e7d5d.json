{"ast":null,"code":"export const addItemToCart = (cartItems, item) => {\n  const existingItem = cartItems.find(ele => ele.id === item.id);\n\n  if (existingItem) {\n    return cartItems.map(ele => ele.id === item.id ? { ...ele,\n      quantity: ele.quantity + 1\n    } : ele);\n  }\n\n  return [...cartItems, { ...item,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, id) => {\n  const existingItem = cartItems.find(ele => ele.id === id);\n\n  if (existingItem.quantity === 1) {\n    cartItems.filter(ele => ele.id !== id);\n  }\n\n  return cartItems.map(ele => cartItems.id === id ? { ...ele,\n    quantity: ele.quantity - 1\n  } : ele);\n};","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/src/redux/cart/utils.js"],"names":["addItemToCart","cartItems","item","existingItem","find","ele","id","map","quantity","removeItemFromCart","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,IAAZ,KAAqB;AAChD,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAgBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,IAAI,CAACI,EAAxC,CAArB;;AAEA,MAAIH,YAAJ,EAAkB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAeF,GAAD,IACnBA,GAAG,CAACC,EAAJ,KAAWJ,IAAI,CAACI,EAAhB,GAAqB,EAAE,GAAGD,GAAL;AAAUG,MAAAA,QAAQ,EAAEH,GAAG,CAACG,QAAJ,GAAe;AAAnC,KAArB,GAA8DH,GADzD,CAAP;AAGD;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,IAAL;AAAWM,IAAAA,QAAQ,EAAE;AAArB,GAAf,CAAP;AACD,CATM;AAWP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYK,EAAZ,KAAmB;AACnD,QAAMH,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAgBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWA,EAAnC,CAArB;;AACA,MAAIH,YAAY,CAACK,QAAb,KAA0B,CAA9B,EAAiC;AAC/BP,IAAAA,SAAS,CAACS,MAAV,CAAkBL,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWA,EAArC;AACD;;AACD,SAAOL,SAAS,CAACM,GAAV,CAAeF,GAAD,IACnBJ,SAAS,CAACK,EAAV,KAAiBA,EAAjB,GAAsB,EAAE,GAAGD,GAAL;AAAUG,IAAAA,QAAQ,EAAEH,GAAG,CAACG,QAAJ,GAAe;AAAnC,GAAtB,GAA+DH,GAD1D,CAAP;AAGD,CARM","sourcesContent":["export const addItemToCart = (cartItems, item) => {\n  const existingItem = cartItems.find((ele) => ele.id === item.id);\n\n  if (existingItem) {\n    return cartItems.map((ele) =>\n      ele.id === item.id ? { ...ele, quantity: ele.quantity + 1 } : ele\n    );\n  }\n  return [...cartItems, { ...item, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, id) => {\n  const existingItem = cartItems.find((ele) => ele.id === id);\n  if (existingItem.quantity === 1) {\n    cartItems.filter((ele) => ele.id !== id);\n  }\n  return cartItems.map((ele) =>\n    cartItems.id === id ? { ...ele, quantity: ele.quantity - 1 } : ele\n  );\n};\n"]},"metadata":{},"sourceType":"module"}