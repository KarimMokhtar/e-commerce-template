{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./types\";\nimport UserActionTypes from \"./types\";\nimport { googleProvider, auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"./actions\";\nexport function* singInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.singInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* singInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(user);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, singInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/src/redux/user/sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","UserActionTypes","googleProvider","auth","createUserProfileDocument","signInFailure","signInSuccess","singInWithGoogle","user","singInWithPopup","userRef","userSnapshot","get","id","data","error","singInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,SAA5B;AAEA,OAAOC,eAAP,MAA4B,SAA5B;AAEA,SACEC,cADF,EAEEC,IAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SACEC,aADF,EAEEC,aAFF,QAGO,WAHP;AAKA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,IAAI,CAACM,eAAL,CAAqBP,cAArB,CAAvB;AACA,UAAMQ,OAAO,GAAG,MAAMX,IAAI,CAACK,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMf,GAAG,CACPS,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACQ,aAAa,CAACU,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAML,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,UAAME,OAAO,GAAG,MAAMX,IAAI,CAACK,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACPS,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GARD,CAQE,OAAOS,GAAP,EAAY;AACZ,UAAM1B,GAAG,CAACQ,aAAa,CAACkB,GAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAuClB,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUmB,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,CAAhB;AACD;AAED,OAAO,UAAUE,SAAV,GAAsB;AAC3B,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA4BzB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./types\";\n\nimport UserActionTypes from \"./types\";\n\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInFailure,\n  signInSuccess,\n} from \"./actions\";\n\nexport function* singInWithGoogle() {\n  try {\n    const { user } = yield auth.singInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n\n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* singInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(user)\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, singInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}