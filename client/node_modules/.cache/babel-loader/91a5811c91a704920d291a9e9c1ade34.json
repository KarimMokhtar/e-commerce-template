{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDWK_YrmZTs2kIDvvTxAQ4LoaLsEUqmY5w\",\n  authDomain: \"kings-queens-9f743.firebaseapp.com\",\n  databaseURL: \"https://kings-queens-9f743.firebaseio.com\",\n  projectId: \"kings-queens-9f743\",\n  storageBucket: \"kings-queens-9f743.appspot.com\",\n  messagingSenderId: \"1091343569027\",\n  appId: \"1:1091343569027:web:81070d5d763df77a2c4bb6\",\n  measurementId: \"G-WL5QVVXTHT\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  console.log(\"test1\", userAuth, additionalData);\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(\"test2\", userRef, snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(\"collectionRef\", collectionRef);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","console","log","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","message","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,oCAFC;AAGbC,EAAAA,WAAW,EAAE,2CAHA;AAIbC,EAAAA,SAAS,EAAE,oBAJE;AAKbC,EAAAA,aAAa,EAAE,gCALF;AAMbC,EAAAA,iBAAiB,EAAE,eANN;AAObC,EAAAA,KAAK,EAAE,4CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3EC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,QAArB,EAA+BC,cAA/B;AACA,MAAI,CAACD,QAAL,EAAe;AAEf,QAAMI,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQN,QAAQ,CAACO,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,OAArB,EAA8BI,QAA9B;;AACA,MAAI,CAACA,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBZ,QAA/B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGZ;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOe,GAAP,EAAY;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCa,GAAG,CAACC,OAAvC;AACD;AACF;;AAED,SAAOb,OAAP;AACD,CAxBM;AA0BP,OAAO,MAAMc,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,WAAhB,KAAgC;AACvE,QAAMC,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqBH,aAArB,CAAtB;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BkB,aAA5B;AACD,CAHM;AAKPhC,QAAQ,CAACkC,aAAT,CAAuBjC,MAAvB;AACA,OAAO,MAAMkC,IAAI,GAAGnC,QAAQ,CAACmC,IAAT,EAAb;AACP,OAAO,MAAMnB,SAAS,GAAGhB,QAAQ,CAACgB,SAAT,EAAlB;AAEP,MAAMoB,QAAQ,GAAG,IAAIpC,QAAQ,CAACmC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyDWK_YrmZTs2kIDvvTxAQ4LoaLsEUqmY5w\",\n  authDomain: \"kings-queens-9f743.firebaseapp.com\",\n  databaseURL: \"https://kings-queens-9f743.firebaseio.com\",\n  projectId: \"kings-queens-9f743\",\n  storageBucket: \"kings-queens-9f743.appspot.com\",\n  messagingSenderId: \"1091343569027\",\n  appId: \"1:1091343569027:web:81070d5d763df77a2c4bb6\",\n  measurementId: \"G-WL5QVVXTHT\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  console.log(\"test1\", userAuth, additionalData)\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(\"test2\", userRef, snapShot)\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(\"collectionRef\",collectionRef)\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}