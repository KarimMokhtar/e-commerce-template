{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./types\";\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"./actions\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess({\n    id: userSnapshot.id,\n    ...userSnapshot.data()\n  }));\n}\nexport function* singInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* singInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {}\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, singInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, singInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/src/redux/user/sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","singInWithGoogle","user","signInWithPopup","error","singInWithEmail","payload","email","password","signInWithEmailAndPassword","err","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./types\";\n\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInFailure,\n  signInSuccess,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccess,\n} from \"./actions\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n\n  yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n}\n\nexport function* singInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* singInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({ user, additionalData:{} }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, singInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, singInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}