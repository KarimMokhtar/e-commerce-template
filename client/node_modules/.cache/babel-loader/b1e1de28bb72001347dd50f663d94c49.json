{"ast":null,"code":"var _jsxFileName = \"/home/karim/E/workplace/e-commerce/client/src/pages/shope/shop.js\";\nimport React, { useEffect, lazy, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport WithSpinner from \"../../components/withSpinner/with-spinner\";\nimport { fetch_collections_start } from \"../../redux/shop/actions\";\nimport { selectIsCollectionLoaded } from \"../../redux/shop/selector\";\nimport Spinner from \"../../components/spinner\";\nconst CollectionsOverview = lazy(() => import(\"../../components/collections-overview/collections-overview\"));\nconst CollectionPage = lazy(() => import(\"../collection/collection\"));\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart,\n  isLoaded\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}`,\n    exact: true,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({}, props, {\n      loading: !isLoaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({}, props, {\n      loading: !isLoaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetch_collections_start())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/client/src/pages/shope/shop.js"],"names":["React","useEffect","lazy","Suspense","connect","Route","createStructuredSelector","WithSpinner","fetch_collections_start","selectIsCollectionLoaded","Spinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","fetchCollectionsStart","isLoaded","path","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,SAASC,uBAAT,QAAwC,0BAAxC;AACA,SAASC,wBAAT,QAAyC,2BAAzC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,mBAAmB,GAAGT,IAAI,CAAC,MAC/B,OAAO,4DAAP,CAD8B,CAAhC;AAGA,MAAMU,cAAc,GAAGV,IAAI,CAAC,MAAM,OAAO,0BAAP,CAAP,CAA3B;AACA,MAAMW,8BAA8B,GAAGN,WAAW,CAACI,mBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGP,WAAW,CAACK,cAAD,CAA7C;;AAEA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,qBAAT;AAAgCC,EAAAA;AAAhC,CAAD,KAAgD;AAC/DjB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAED,KAAK,CAACG,IAAK,EADtB;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,MAAM,EAAGC,KAAD,iBACN,oBAAC,8BAAD,oBAAoCA,KAApC;AAA2C,MAAA,OAAO,EAAE,CAACF,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAGC,KAAD,iBACN,oBAAC,yBAAD,oBAA+BA,KAA/B;AAAsC,MAAA,OAAO,EAAE,CAACF,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF;AAmBD,CAvBD;;AAwBA,MAAMG,eAAe,GAAGf,wBAAwB,CAAC;AAC/CY,EAAAA,QAAQ,EAAET;AADqC,CAAD,CAAhD;;AAGA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,qBAAqB,EAAE,MAAMM,QAAQ,CAACf,uBAAuB,EAAxB;AADG,CAAf,CAA3B;;AAGA,eAAeJ,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf","sourcesContent":["import React, { useEffect, lazy, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport WithSpinner from \"../../components/withSpinner/with-spinner\";\nimport { fetch_collections_start } from \"../../redux/shop/actions\";\nimport { selectIsCollectionLoaded } from \"../../redux/shop/selector\";\nimport Spinner from \"../../components/spinner\";\n\nconst CollectionsOverview = lazy(() =>\n  import(\"../../components/collections-overview/collections-overview\")\n);\nconst CollectionPage = lazy(() => import(\"../collection/collection\"));\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match, fetchCollectionsStart, isLoaded }) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return (\n    <div className=\"shop-page\">\n      <Suspense fallback={<Spinner />}>\n        <Route\n          path={`${match.path}`}\n          exact\n          render={(props) => (\n            <CollectionsOverviewWithSpinner {...props} loading={!isLoaded} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner {...props} loading={!isLoaded} />\n          )}\n        />\n      </Suspense>\n    </div>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  isLoaded: selectIsCollectionLoaded,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStart: () => dispatch(fetch_collections_start()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}