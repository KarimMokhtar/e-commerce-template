{"ast":null,"code":"var _jsxFileName = \"/home/karim/E/workplace/e-commerce/src/pages/shope/shop.js\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport CollectionPage from \"../collection/collection\";\nimport { update_collections } from \"../../redux/shop/actions\";\nimport { connect } from \"react-redux\";\n\nconst ShopPage = ({\n  match,\n  update_collections\n}) => {\n  let unsubscribeFromSnapshot = null;\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collMap = convertCollectionsSnapshotToMap(snapshot);\n      update_collections(collMap);\n    });\n    return () => unsubscribeFromSnapshot();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}`,\n    exact: true,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  update_collections: collMap => dispatch(update_collections(collMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/src/pages/shope/shop.js"],"names":["React","useEffect","Route","CollectionsOverview","convertCollectionsSnapshotToMap","firestore","CollectionPage","update_collections","connect","ShopPage","match","unsubscribeFromSnapshot","collectionRef","collection","onSnapshot","snapshot","collMap","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASH,EAAAA;AAAT,CAAD,KAAmC;AAClD,MAAII,uBAAuB,GAAG,IAA9B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,uBAAuB,GAAGC,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AACrE,YAAMC,OAAO,GAAGZ,+BAA+B,CAACW,QAAD,CAA/C;AACAR,MAAAA,kBAAkB,CAACS,OAAD,CAAlB;AACD,KAHyB,CAA1B;AAIA,WAAO,MAAML,uBAAuB,EAApC;AACD,GAPQ,EAON,EAPM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAED,KAAK,CAACO,IAAK,EAA3B;AAA8B,IAAA,KAAK,MAAnC;AAAoC,IAAA,SAAS,EAAEd,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEO,KAAK,CAACO,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEX,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAjBD;;AAmBA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,kBAAkB,EAAGS,OAAD,IAAaG,QAAQ,CAACZ,kBAAkB,CAACS,OAAD,CAAnB;AADD,CAAf,CAA3B;;AAGA,eAAeR,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCT,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview\";\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\nimport CollectionPage from \"../collection/collection\";\nimport { update_collections } from \"../../redux/shop/actions\";\nimport { connect } from \"react-redux\";\nconst ShopPage = ({ match, update_collections }) => {\n  let unsubscribeFromSnapshot = null;\n\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    unsubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot) => {\n      const collMap = convertCollectionsSnapshotToMap(snapshot);\n      update_collections(collMap);\n    });\n    return () => unsubscribeFromSnapshot();\n  }, []);\n  return (\n    <div className=\"shop-page\">\n      <Route path={`${match.path}`} exact component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  update_collections: (collMap) => dispatch(update_collections(collMap)),\n});\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}