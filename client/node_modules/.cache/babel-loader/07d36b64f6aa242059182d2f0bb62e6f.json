{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport actionsTypes from \"./types\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetch_collections_failure, fetch_collections_success } from \"./actions\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetch_collections_success(collMap));\n  } catch (err) {\n    yield put(fetch_collections_failure(err.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(actionsTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/home/karim/E/workplace/e-commerce/client/src/redux/shop/sagas.js"],"names":["takeLatest","call","put","all","actionsTypes","convertCollectionsSnapshotToMap","firestore","fetch_collections_failure","fetch_collections_success","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collMap","err","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,YAAP,MAAyB,SAAzB;AACA,SACEC,+BADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,SACEC,yBADF,EAEEC,yBAFF,QAGO,WAHP;AAIA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,OAAO,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAA1B;AACA,UAAMV,GAAG,CAACM,yBAAyB,CAACM,OAAD,CAA1B,CAAT;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZ,UAAMb,GAAG,CAACK,yBAAyB,CAACQ,GAAG,CAACC,OAAL,CAA1B,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CAACI,YAAY,CAACc,uBAAd,EAAuCT,qBAAvC,CAAhB;AACD;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\n\nimport actionsTypes from \"./types\";\nimport {\n  convertCollectionsSnapshotToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetch_collections_failure,\n  fetch_collections_success,\n} from \"./actions\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetch_collections_success(collMap));\n  } catch (err) {\n    yield put(fetch_collections_failure(err.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(actionsTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}